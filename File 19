
import React from "react";
import { useParams, Link } from "react-router-dom";
import { Calendar, Clock, ArrowLeft, Share2, Tag } from "lucide-react";
import { Button } from "../components/ui/button";
import { mockBlogPosts } from "../data/mockData";

const BlogPost = () => {
  const { id } = useParams();
  const post = mockBlogPosts.find(p => p.id === parseInt(id));

  if (!post) {
    return (
      <div className="min-h-screen bg-stone-900 text-stone-100 flex items-center justify-center">
        <div className="text-center">
          <h1 className="text-4xl font-bold text-red-400 mb-4">Post Not Found</h1>
          <p className="text-stone-300 mb-8">The blog post you're looking for doesn't exist.</p>
          <Button asChild className="bg-red-600 hover:bg-red-500">
            <Link to="/blog">
              <ArrowLeft className="w-4 h-4 mr-2" />
              Back to Blog
            </Link>
          </Button>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-stone-900 text-stone-100">
      {/* Header */}
      <section className="py-12 border-b border-red-800/30">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
          <Link 
            to="/blog"
            className="inline-flex items-center text-red-400 hover:text-red-300 transition-colors duration-200 mb-8"
          >
            <ArrowLeft className="w-4 h-4 mr-2" />
            Back to Blog
          </Link>
          
          <div className="mb-6">
            <span className="bg-red-600/90 text-white px-3 py-1 rounded-full text-sm font-medium">
              {post.category}
            </span>
          </div>
          
          <h1 className="text-4xl md:text-5xl font-bold text-stone-100 mb-6 leading-tight">
            {post.title}
          </h1>
          
          <div className="flex items-center gap-6 text-stone-400 mb-8">
            <div className="flex items-center gap-2">
              <Calendar className="w-5 h-5" />
              {post.date}
            </div>
            <div className="flex items-center gap-2">
              <Clock className="w-5 h-5" />
              {post.readTime}
            </div>
            <Button 
              variant="outline" 
              size="sm"
              className="border-red-600/50 text-red-400 hover:bg-red-600 hover:text-white"
            >
              <Share2 className="w-4 h-4 mr-2" />
              Share
            </Button>
          </div>
        </div>
      </section>

      {/* Featured Image */}
      {post.image && (
        <section className="py-8">
          <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="aspect-video overflow-hidden rounded-xl">
              <img 
                src={post.image} 
                alt={post.title}
                className="w-full h-full object-cover"
              />
            </div>
          </div>
        </section>
      )}

      {/* Content */}
      <section className="py-12">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
          <article className="prose prose-invert prose-red prose-lg max-w-none">
            <p className="text-xl text-stone-300 leading-relaxed mb-8 font-medium">
              {post.excerpt}
            </p>
            
            <div className="space-y-6 text-stone-300">
              {post.content.map((paragraph, index) => (
                <p key={index} className="leading-relaxed">
                  {paragraph}
                </p>
              ))}
            </div>
          </article>
          
          {/* Tags */}
          <div className="mt-12 pt-8 border-t border-red-800/30">
            <div className="flex items-center gap-3 mb-6">
              <Tag className="w-5 h-5 text-red-400" />
              <span className="text-stone-300 font-semibold">Tags:</span>
            </div>
            <div className="flex flex-wrap gap-2">
              {post.tags.map((tag, index) => (
                <span 
                  key={index}
                  className="bg-stone-800 border border-red-800/30 text-red-400 px-3 py-2 rounded-lg text-sm hover:bg-red-600/20 transition-colors duration-200"
                >
                  #{tag}
                </span>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* Navigation to other posts */}
      <section className="py-12 bg-stone-800/30">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
          <h3 className="text-2xl font-bold text-red-400 mb-8 text-center">More from the Dragon's Chronicle</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {mockBlogPosts
              .filter(p => p.id !== post.id)
              .slice(0, 2)
              .map((relatedPost) => (
                <Link 
                  key={relatedPost.id}
                  to={`/blog/${relatedPost.id}`}
                  className="block bg-stone-800 border border-red-800/30 rounded-lg p-6 hover:border-red-600/50 transition-all duration-200 group"
                >
                  <span className="text-red-400 text-sm font-medium mb-2 block">
                    {relatedPost.category}
                  </span>
                  <h4 className="text-lg font-bold text-stone-100 mb-2 group-hover:text-red-400 transition-colors duration-200">
                    {relatedPost.title}
                  </h4>
                  <p className="text-stone-400 text-sm line-clamp-2">
                    {relatedPost.excerpt}
                  </p>
                </Link>
              ))}
          </div>
        </div>
      </section>
    </div>
  );
};

export default BlogPost;
