import React, { useState } from "react";
import { Link, useLocation } from "react-router-dom";
import { Menu, X, Music, User, BookOpen } from "lucide-react";

const Header = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const location = useLocation();

  const navigation = [
    { name: "Home", href: "/", icon: Music },
    { name: "Bio", href: "/bio", icon: User },
    { name: "Blog", href: "/blog", icon: BookOpen },
  ];

  const isActive = (path) => location.pathname === path;

  return (
    <header className="bg-stone-900 border-b border-red-800/30 sticky top-0 z-50 backdrop-blur-sm bg-stone-900/95">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center justify-between h-16">
          {/* Logo */}
          <Link to="/" className="flex items-center space-x-3 group">
            <div className="w-10 h-10 rounded-full overflow-hidden group-hover:scale-105 transition-transform duration-200">
              <img 
                src="https://customer-assets.emergentagent.com/job_sound-spotlight/artifacts/vhlm25sg_file_000000007fc061fd80e4a99cd8b54d1c.png"
                alt="Dracul Dragon Logo"
                className="w-full h-full object-cover"
              />
            </div>
            <span className="text-2xl font-bold text-red-500 tracking-wide">
              DRACUL
            </span>
          </Link>

          {/* Desktop Navigation */}
          <nav className="hidden md:flex space-x-8">
            {navigation.map((item) => {
              const IconComponent = item.icon;
              return (
                <Link
                  key={item.name}
                  to={item.href}
                  className={`flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200 ${
                    isActive(item.href)
                      ? "text-red-400 bg-red-900/20"
                      : "text-stone-300 hover:text-red-400 hover:bg-red-900/10"
                  }`}
                >
                  <IconComponent className="w-4 h-4" />
                  <span>{item.name}</span>
                </Link>
              );
            })}
          </nav>

          {/* Mobile menu button */}
          <button
            onClick={() => setIsMenuOpen(!isMenuOpen)}
            className="md:hidden inline-flex items-center justify-center p-2 rounded-md text-stone-300 hover:text-red-400 hover:bg-red-900/10 transition-colors duration-200"
          >
            {isMenuOpen ? (
              <X className="w-6 h-6" />
            ) : (
              <Menu className="w-6 h-6" />
            )}
          </button>
        </div>

        {/* Mobile Navigation */}
        {isMenuOpen && (
          <div className="md:hidden">
            <div className="px-2 pt-2 pb-3 space-y-1 border-t border-red-800/30">
              {navigation.map((item) => {
                const IconComponent = item.icon;
                return (
                  <Link
                    key={item.name}
                    to={item.href}
                    onClick={() => setIsMenuOpen(false)}
                    className={`flex items-center space-x-2 px-3 py-2 rounded-md text-base font-medium transition-colors duration-200 ${
                      isActive(item.href)
                        ? "text-red-400 bg-red-900/20"
                        : "text-stone-300 hover:text-red-400 hover:bg-red-900/10"
                    }`}
                  >
                    <IconComponent className="w-5 h-5" />
                    <span>{item.name}</span>
                  </Link>
                );
              })}
            </div>
          </div>
        )}
      </div>
    </header>
  );
};

export default Header;
